- name: Install yum package
  yum:
    name: "{{ telegraf_install_url_rpm }}"
    state: present
  when: ansible_os_family == "RedHat"
  register: yum_installed

- name: Install any necessary dependencies [Debian/Ubuntu]
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600
  with_items:
    - python-httplib2
    - python-apt
    - curl
    - apt-transport-https
  when: ansible_os_family == "Debian"

- name: Download Telegraf package via URL [Debian/Ubuntu]
  command: curl -o /tmp/telegraf.deb {{ telegraf_install_url_deb }}
  when: ansible_os_family == "Debian"

- name: Install downloaded Telegraf package [Debian/Ubuntu]
  apt:
    deb: /tmp/telegraf.deb
    state: present
  when: ansible_os_family == "Debian"
  register: apt_installed

- name: Copy configuration from external place
  template:
    src: "{{ telegraf_configuration_file }}"
    dest: "/etc/telegraf/telegraf.conf"
    mode: 0644
  register: external_config_changed
  when: telegraf_configuration_file is defined

- name: Copy configuration from template
  template:
    src: telegraf.conf.j2
    dest: /etc/telegraf/telegraf.conf
    mode: 0644
  register: config_changed
  when: telegraf_configuration_file is not defined

- name: Restart telegraf service
  service: name=telegraf state=restarted
  when: >
    (yum_installed is defined and yum_installed.changed) or
    (apt_installed is defined and apt_installed.changed) or
    (config_changed.changed) or
    (external_config_changed.changed)

- name: Find cassandra diagnostics version file
  stat: path={{ cassandra_diagnostics_version_file }}
  register: version_file

- name: Check the current version
  shell: "cat {{ cassandra_diagnostics_version_file }}"
  register: current_version
  ignore_errors: true
  when: version_file is defined and version_file.stat.exists

- name: Download new binaries
  include: download.yml
  when: current_version|skipped or cassandra_diagnostics_version != current_version.stdout
  notify: Restart cassandra service

- name: Copy metrics reporter config fat jar with correct version of riemann
  copy: src=reporter-config2-custom.jar
    dest={{ cassandra_lib_location }}/reporter-config2-custom.jar
    mode=0755 owner={{ cassandra_user }} group={{ cassandra_user }}
  notify: Restart cassandra service

- name: Update cassandra diagnostics configuration
  template: src={{ cassandra_diagnostics_configuration_file }} group={{ cassandra_user }} owner={{ cassandra_user }}
    dest={{ cassandra_configuration_dir }}/cassandra-diagnostics.yml
  notify: Restart cassandra service

- name: Set cassandra-env custom query handler line
  lineinfile: dest={{ cassandra_configuration_dir }}/cassandra-env.sh
    line='JVM_OPTS="$JVM_OPTS -Dcassandra.custom_query_handler_class=io.smartcat.cassandra.diagnostics.connector.DiagnosticsQueryHandler"'
  notify: Restart cassandra service

- name: Update cassandra-env configuration line
  lineinfile: dest={{ cassandra_configuration_dir }}/cassandra-env.sh state=present
    line='JVM_OPTS="$JVM_OPTS -Dcassandra.diagnostics.config=cassandra-diagnostics.yml"'
  notify: Restart cassandra service

- name: Write new version
  shell: "echo {{ cassandra_diagnostics_version }} > {{ cassandra_diagnostics_version_file }}"
  when: current_version|skipped or cassandra_diagnostics_version != current_version.stdout

- meta: flush_handlers

---
- name: Launch instances
  vars:
    launch_tags: '{{ ec2_tags|combine({"Group": ec2_group}) }}'
  ec2:
    key_name: '{{ ec2_key_name }}'
    group: '{{ ec2_security_group }}'
    image: '{{ ec2_image_id }}'
    instance_type: '{{ ec2_instance_type }}'
    region: '{{ ec2_region }}'
    volumes: '{{ ec2_volumes }}'
    count_tag: '{{ launch_tags }}'
    instance_tags: '{{ launch_tags }}'
    exact_count: '{{ ec2_count }}'
    wait: true
  tags: 'aws-setup'

- name: Retrieve instances info
  ec2_remote_facts:
    region: '{{ ec2_region }}'
    filters:
      'tag:Group': '{{ ec2_group }}'
  register: ec2_info
  tags: 'always'

- name: Collect instance identifiers
  set_fact:
    instance_ids: '{{ ec2_info.instances | map(attribute="id") | list }}'
  tags: 'always'

- name: Start instances
  ec2:
    instance_ids: '{{ instance_ids }}'
    region: '{{ ec2_region }}'
    state: running
    wait: true
  tags: 'aws-start'

- name: Refresh instances info to acquire public DNS
  ec2_remote_facts:
    region: '{{ ec2_region }}'
    filters:
      'tag:Group': '{{ ec2_group }}'
  register: ec2_info
  tags: 'aws-start'

- name: Build group
  add_host:
    hostname: '{{ item.public_dns_name }}'
    groupname: '{{ ec2_group }}'
    private_ip: '{{ item.private_ip_address }}'
  with_items: '{{ ec2_info.instances }}'
  tags: 'always'

- name: Check SSH connections
  wait_for:
    host: '{{ item.public_dns_name }}'
    port: 22
    delay: 15
    timeout: 120
    state: started
  with_items: '{{ ec2_info.instances }}'
  tags: ['aws-setup', 'aws-start']

- name: Stop instances
  ec2:
    instance_ids: '{{ instance_ids }}'
    region: '{{ ec2_region }}'
    state: stopped
    wait: true
  tags: 'aws-stop'
